// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetInstagramAPI.Data.Contexts;

#nullable disable

namespace PetInstagramAPI.Data.Migrations
{
    [DbContext(typeof(PetsDbContext))]
    [Migration("20250920193119_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnimalProfileId")
                        .HasColumnType("uuid");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasDefaultValue("defaultImg.png");

                    b.Property<long>("LikesCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AnimalProfileId");

                    b.ToTable("AnimalPhotos");
                });

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<Guid>("AnimalTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarPath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasDefaultValue("defaultImg.png");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<long>("FollowersCount")
                        .HasColumnType("bigint");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalTypeId");

                    b.ToTable("AnimalProfiles");
                });

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasDefaultValue("defaultImg.png");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("AnimalTypes");
                });

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalPhoto", b =>
                {
                    b.HasOne("petInstagram.Data.Entities.AnimalProfile", "AnimalProfile")
                        .WithMany("AnimalPhotos")
                        .HasForeignKey("AnimalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalProfile");
                });

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalProfile", b =>
                {
                    b.HasOne("petInstagram.Data.Entities.AnimalType", "AnimalType")
                        .WithMany("AnimalProfiles")
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalType");
                });

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalProfile", b =>
                {
                    b.Navigation("AnimalPhotos");
                });

            modelBuilder.Entity("petInstagram.Data.Entities.AnimalType", b =>
                {
                    b.Navigation("AnimalProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
